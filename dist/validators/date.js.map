{"version":3,"file":"date.js","sources":["../../src/validators/date.js"],"sourcesContent":["import buildMessage from '../utils/validation-errors.js';\nimport withDefaults from '../utils/with-defaults.js';\nimport toDate from '../utils/to-date.js';\n\nconst errorFormat = 'MMM Do, YYYY';\n\nfunction isValidDate(d) {\n  return d instanceof Date && !isNaN(d);\n}\n\nexport default function validateDate(options = {}) {\n  options = withDefaults(options, {\n    allowBlank: false,\n    errorFormat: errorFormat,\n  });\n\n  return (key, value) => {\n    let { allowBlank } = options;\n    let { before, onOrBefore, after, onOrAfter, message } = options;\n    let type = 'date';\n\n    if (allowBlank && (typeof value === 'undefined' || value === null)) {\n      return true;\n    }\n\n    let date = toDate(value);\n\n    if (!isValidDate(date)) {\n      return buildMessage(key, {\n        type,\n        value: 'not a date',\n        context: { value, message },\n      });\n    }\n\n    if (before) {\n      before = toDate(before);\n      message = message || `[BEFORE] date is NOT before ${value}`;\n      type = 'before';\n\n      if (date >= before) {\n        return buildMessage(key, { type, value, context: { before, message } });\n      }\n    }\n\n    if (onOrBefore) {\n      onOrBefore = toDate(onOrBefore);\n      message = message || `[ON OR BEFORE] date is NOT on or before ${value}`;\n      type = 'onOrBefore';\n\n      if (date > onOrBefore) {\n        return buildMessage(key, {\n          type,\n          value,\n          context: { onOrBefore, message },\n        });\n      }\n    }\n\n    if (after) {\n      after = toDate(after);\n      message = message || `[AFTER] date is NOT after ${value}`;\n      type = 'after';\n\n      if (date <= after) {\n        return buildMessage(key, { type, value, context: { after, message } });\n      }\n    }\n\n    if (onOrAfter) {\n      onOrAfter = toDate(onOrAfter);\n      message = message || `[ON OR AFTER] date is NOT on or after ${value}`;\n      type = 'onOrAfter';\n\n      if (date < onOrAfter) {\n        return buildMessage(key, {\n          type,\n          value,\n          context: { onOrAfter, message },\n        });\n      }\n    }\n\n    return true;\n  };\n}\n\nexport { errorFormat };\n"],"names":["errorFormat","isValidDate","d","Date","isNaN","validateDate","options","withDefaults","allowBlank","key","value","before","onOrBefore","after","onOrAfter","message","type","date","toDate","buildMessage","context"],"mappings":"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"}